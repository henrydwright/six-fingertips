{
    "openapi": "3.0.1",
    "info": {
        "title": "Public Health Data API",
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://fingertips.phe.org.uk/"
        }
    ],
    "paths": {
        "/api/area_categories": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Get the categories of an area",
                "description": "Returns a dictionary of area code to category ID",
                "operationId": "Areas_GetAreaCategories",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "child_area_type_id",
                        "in": "query",
                        "description": "Child area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "category_type_id",
                        "in": "query",
                        "description": "Category type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/area_types": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Get a list of area types",
                "description": "If the profile_ids Parameter is omitted then all defined area types will be returned.",
                "operationId": "Areas_GetAreaTypes",
                "parameters": [
                    {
                        "name": "profile_ids",
                        "in": "query",
                        "description": "List of profile IDs [optional]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "area_type_ids",
                        "in": "query",
                        "description": "List of area type IDs to include [optional]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_components",
                        "in": "query",
                        "description": "Whether to include component area types [yes/no - no is default]",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AreaType"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AreaType"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AreaType"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/area_types/with_data": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Get a list of area types with data",
                "operationId": "Areas_GetAreaTypesWithData",
                "parameters": [
                    {
                        "name": "area_type_ids",
                        "in": "query",
                        "description": "List of area type IDs to include [optional]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_components",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AreaType"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AreaType"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AreaType"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/area_types/parent_area_types": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Gets the area types in a profile along with the available parent area types",
                "description": "Returns a list of area types each with a list of available parent area types",
                "operationId": "Areas_GetAreaTypesWithParentAreaTypes",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "template_profile_id",
                        "in": "query",
                        "description": "ID of the profile to use as template if accessing search results",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "include_components",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AreaType"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AreaType"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AreaType"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/area_address": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Gets the address with latitude and longitude of a point area",
                "operationId": "Areas_GetAreaAddress",
                "parameters": [
                    {
                        "name": "area_code",
                        "in": "query",
                        "description": "Area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AreaAddress"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AreaAddress"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AreaAddress"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/area_address/by_area_code": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Get area and its address",
                "operationId": "Areas_GetAreaWithAddress",
                "parameters": [
                    {
                        "name": "area_code",
                        "in": "query",
                        "description": "Area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_coordinates",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AreaAddress"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AreaAddress"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AreaAddress"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/area_addresses/by_parent_area_code": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Gets a list of areas and their addresses within a parent area",
                "operationId": "Areas_GetChildAreasWithAddresses",
                "parameters": [
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "Parent area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AreaAddress"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AreaAddress"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AreaAddress"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/area_addresses/csv/by_parent_area_code": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "    Gets a list of areas and their addresses within a parent area as a CSV file. \r\nGP practices are currently the only areas for which addresses are defined.",
                "operationId": "Areas_GetChildAreasWithAddressesAsCsv",
                "parameters": [
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "Parent area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/areas/by_area_type": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Get a list of areas of a specific area type",
                "operationId": "Areas_GetAreasOfAreaType",
                "parameters": [
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "template_profile_id",
                        "in": "query",
                        "description": "Template profile ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "retrieve_ignored_areas",
                        "in": "query",
                        "description": "Whether to retrieve areas that are ignored for the profile [yes or no accepted] [optional]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Ignore this parameter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IArea"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IArea"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IArea"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/areas/by_parent_area_code": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Get a list of areas that belong to a parent area",
                "operationId": "Areas_GetAreasOfAreaType_ByParentAreaCode",
                "parameters": [
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "Parent area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IArea"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IArea"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IArea"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/areas/by_area_code": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Get a list of areas from their area codes",
                "operationId": "Areas_GetAreasOfAreaType_ByAreaCode",
                "parameters": [
                    {
                        "name": "area_codes",
                        "in": "query",
                        "description": "List of area codes",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IArea"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IArea"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IArea"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/areas/by_area_type_and_area_name_search_text": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Get a list of areas of a specific area type and area name search text",
                "operationId": "Areas_GetAreasOfAreaTypeAndAreaNameSearchText",
                "parameters": [
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_name_search_text",
                        "in": "query",
                        "description": "Area name search text",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IArea"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IArea"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IArea"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/area/by_area_type_and_parent_code": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Get the area based on area type and parent code",
                "operationId": "Areas_GetAreaByAreaTypeAndParentCode",
                "parameters": [
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_code",
                        "in": "query",
                        "description": "Parent code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IArea"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IArea"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/IArea"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/areas/nearest_neighbours": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Get a list of Nearest neighbours areas that belong to a area type and area code",
                "operationId": "Areas_GetNearestNeighbourAreasOfAreaTypeAndAreaCode",
                "parameters": [
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_code",
                        "in": "query",
                        "description": "Area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NeighbourAreaDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NeighbourAreaDetails"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/NeighbourAreaDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/areas_with_addresses/by_area_code": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Get a list of areas with address from their area codes",
                "operationId": "Areas_GetAreasWithAddresses",
                "parameters": [
                    {
                        "name": "area_codes",
                        "in": "query",
                        "description": "List of area codes",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AreaAddress"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AreaAddress"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AreaAddress"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/area/parent_areas": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Gets the parent areas of an area",
                "description": "Returns a hierarchy of parent areas",
                "operationId": "Areas_GetParentAreas",
                "parameters": [
                    {
                        "name": "child_area_code",
                        "in": "query",
                        "description": "Area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent_area_type_ids",
                        "in": "query",
                        "description": "Comma separated list of area type IDs",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AreaToParentsMap"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AreaToParentsMap"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/parent_to_child_areas": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Gets a dictionary of parent area code to a list of child area codes",
                "description": "Can be used to either get all child areas of a type mapped to parents of a specific type or nearest neighbours of a specific area\r\n\r\n(i) /api/parent_to_child_areas?child_area_type_id=102&amp;parent_area_type_id=6\r\n\r\n(ii) /api/parent_to_child_areas?nearest_neighbour_code=nn-1-E10000014",
                "operationId": "Areas_GetParentToChildAreaMapping",
                "parameters": [
                    {
                        "name": "child_area_type_id",
                        "in": "query",
                        "description": "Child area type ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_type_id",
                        "in": "query",
                        "description": "Parent area type ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID for filtering of certain areas [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "nearest_neighbour_code",
                        "in": "query",
                        "description": "Nearest neighbour code [optional]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User ID [optional]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "retrieve_ignored_areas",
                        "in": "query",
                        "description": "Whether to retrieve areas that are ignored for the profile [yes or no accepted] [optional]",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/parent_to_child_areas_by_parent_code": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Gets a dictionary of parent area code to a list of child area codes",
                "operationId": "Areas_GetParentToChildAreaMappingByParentCode",
                "parameters": [
                    {
                        "name": "child_area_type_id",
                        "in": "query",
                        "description": "Child area type ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_type_id",
                        "in": "query",
                        "description": "Parent area type ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID for filtering of certain areas [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "nearest_neighbour_code",
                        "in": "query",
                        "description": "Nearest neighbour code [optional]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent_code",
                        "in": "query",
                        "description": "Parent code [optional]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "retrieve_ignored_areas",
                        "in": "query",
                        "description": "Whether to retrieve areas that are ignored for the profile [yes or no accepted] [optional]",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/area_search_by_proximity": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Gets a list of areas within 5 miles radius of a point",
                "description": "Only will work for point areas (e.g. GP practices) not polygon areas (e.g. CCGs)",
                "operationId": "Areas_GetNearbyAreas",
                "parameters": [
                    {
                        "name": "easting",
                        "in": "query",
                        "description": "Easting",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "northing",
                        "in": "query",
                        "description": "Northing",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NearByAreas"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NearByAreas"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NearByAreas"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/place_postcode_search": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Gets a list of places or postcodes and the broader geographical area they are located in",
                "operationId": "Areas_GetPlaceNameSearchResults",
                "parameters": [
                    {
                        "name": "search_text",
                        "in": "query",
                        "description": "Text to search for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "polygon_area_type_id",
                        "in": "query",
                        "description": "Area type ID of the areas containing the places searched for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_areas_to_include_in_results",
                        "in": "query",
                        "description": "Area type IDs of the parent types that should be included in the search results",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_coordinates",
                        "in": "query",
                        "description": "Whether or not to include eastings and northings",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GeographicalSearchResult"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GeographicalSearchResult"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GeographicalSearchResult"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/area_search": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Searches geographical area names",
                "operationId": "Areas_GetAreaSearchResults",
                "parameters": [
                    {
                        "name": "search_text",
                        "in": "query",
                        "description": "Text to search for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "area_type_ids",
                        "in": "query",
                        "description": "IDs of the area types to search for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SearchResultArea"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SearchResultArea"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SearchResultArea"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/parent_area_of_specific_type_for_child_areas": {
            "get": {
                "tags": [
                    "Areas"
                ],
                "summary": "Gets the parent area types of all the child areas of a parent area",
                "description": "e.g. the Deprivation Decile of all the practices within a CCG",
                "operationId": "Areas_GetParentAreasOfChildAreas",
                "parameters": [
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "Parent area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "child_area_type_id",
                        "in": "query",
                        "description": "Child area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_type_id",
                        "in": "query",
                        "description": "Parent area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IArea"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IArea"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IArea"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/all_data/csv/for_one_indicator": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get all the data available for all area types and for one indicator in CSV format. This is the easiest way to get the data.",
                "description": "This service returns data in CSV not JSON format so the response will not be viewable on this page",
                "operationId": "Data_GetDataFileForOneIndicator",
                "parameters": [
                    {
                        "name": "indicator_id",
                        "in": "query",
                        "description": "Indicator ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/all_data/csv/by_indicator_id": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get data for specific indicators in CSV format.",
                "description": "This service returns data in CSV not JSON format so the response will not be viewable on this page",
                "operationId": "Data_GetDataFileForIndicatorIds",
                "parameters": [
                    {
                        "name": "indicator_ids",
                        "in": "query",
                        "description": "Comma separated list of indicator IDs [Maximum 100]",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "child_area_type_id",
                        "in": "query",
                        "description": "Child area type ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_type_id",
                        "in": "query",
                        "description": "Parent area type ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "The parent area code [default is England]",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/all_data/csv/by_group_id": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get data for all the indicators in a profile group in CSV format",
                "description": "This service returns data in CSV not JSON format so the response will not be viewable on this page",
                "operationId": "Data_GetDataFileForGroup",
                "parameters": [
                    {
                        "name": "child_area_type_id",
                        "in": "query",
                        "description": "Child area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_type_id",
                        "in": "query",
                        "description": "Parent area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Profile group ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "The parent area code [default is England]",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/all_data/csv/by_profile_id": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get data for all the indicators in a profile in CSV format",
                "description": "This service returns data in CSV not JSON format so the response will not be viewable on this page",
                "operationId": "Data_GetDataFileForProfile",
                "parameters": [
                    {
                        "name": "child_area_type_id",
                        "in": "query",
                        "description": "Child area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_type_id",
                        "in": "query",
                        "description": "Parent area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "The parent area code [default is England]",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/population_age_distribution/csv": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Gets 5-year age range populations for all the GP practices within a parent area",
                "operationId": "Data_GetDataFileForPopulationAgeDistribution",
                "parameters": [
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Parent area type id (e.g. CCG)",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_code",
                        "in": "query",
                        "description": "Parent area code (e.g. a CCG area code)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profile_key",
                        "in": "query",
                        "description": "Profile key [optional]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group_ids",
                        "in": "query",
                        "description": "List of group ids [optional]",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/latest_data/all_indicators_in_profile_group_for_child_areas": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get the most recent data for a profile group",
                "operationId": "Data_GetGroupDataAtDataPoint",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Profile group ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "Parent area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRoot"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRoot"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRoot"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/latest_data/specific_indicators_for_child_areas": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get the most recent data for a list of indicator IDs",
                "operationId": "Data_GetGroupDataAtDataPoint_ChildAreas",
                "parameters": [
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "Parent area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indicator_ids",
                        "in": "query",
                        "description": "Comma separated list of indicator IDs [Maximum 100]",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profile_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "restrict_to_profile_ids",
                        "in": "query",
                        "description": "Comma separated list of profile IDs",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRoot"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRoot"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRoot"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/latest_data/specific_indicators_for_single_area": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get the most recent data for a list of indicator IDs",
                "operationId": "Data_GetGroupDataAtDataPointForSpecificArea",
                "parameters": [
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_code",
                        "in": "query",
                        "description": "Area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indicator_ids",
                        "in": "query",
                        "description": "Comma separated list of indicator IDs [Maximum 100]",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrict_to_profile_ids",
                        "in": "query",
                        "description": "Comma separated list of profile IDs",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRoot"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRoot"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRoot"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/latest_data/single_indicator_for_all_areas": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get a list of the core data for all the areas within a parent area",
                "operationId": "Data_GetAreaValues",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Profile group ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "Parent area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "comparator_id",
                        "in": "query",
                        "description": "Comparator ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "indicator_id",
                        "in": "query",
                        "description": "Indicator ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sex_id",
                        "in": "query",
                        "description": "Sex ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "age_id",
                        "in": "query",
                        "description": "Age ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year_range",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "template_profile_id",
                        "in": "query",
                        "description": "ID of the profile to use as template if accessing search results",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "data_point_offset",
                        "in": "query",
                        "description": "Offset in years, quarters or months from the most recent time point [default is 0]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "category_type_id",
                        "in": "query",
                        "description": "Category type ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CoreDataSet"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CoreDataSet"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CoreDataSet"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/latest_data/all_indicators_in_profile_group_for_single_area": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get data values for a group for one specific area",
                "description": "Get CoreDataSet objects for every group root in a domain",
                "operationId": "Data_GetGroupDataAtDataPointOfSpecificAreas",
                "parameters": [
                    {
                        "name": "area_code",
                        "in": "query",
                        "description": "Area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Group ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CoreDataSet"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CoreDataSet"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CoreDataSet"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/latest_data/all_indicators_in_multiple_profile_groups_for_multiple_areas": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get an ordered list of indicators with core data for requested profiles groups and areas",
                "operationId": "Data_GetAreaData",
                "parameters": [
                    {
                        "name": "group_ids",
                        "in": "query",
                        "description": "Comma separated list of profile group IDs",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_codes",
                        "in": "query",
                        "description": "Comma separated list of area codes",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "comparator_area_codes",
                        "in": "query",
                        "description": "Comma separated list of comparator area codes",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_time_periods",
                        "in": "query",
                        "description": "Whether to include time periods in response [yes/no - no is default]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "latest_data_only",
                        "in": "query",
                        "description": "Whether to include only the latest data [yes/no - no is default]",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SimpleAreaData"
                                            }
                                        }
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SimpleAreaData"
                                            }
                                        }
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SimpleAreaData"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/recent_trends/for_child_areas": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get the recent trends for every area under a parent area.",
                "operationId": "Data_GetTrendMarkers",
                "parameters": [
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "Parent area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Profile group ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "indicator_id",
                        "in": "query",
                        "description": "Indicator ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sex_id",
                        "in": "query",
                        "description": "Sex ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "age_id",
                        "in": "query",
                        "description": "Age ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year_range",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "category_type_id",
                        "in": "query",
                        "description": "Category type ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/TrendMarkerResult"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/TrendMarkerResult"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/TrendMarkerResult"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/trend_data/all_indicators_in_profile_group_for_child_areas": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get the trend data for a profile group",
                "operationId": "Data_GetTrendData",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Profile group ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "Parent area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrendRoot"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrendRoot"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrendRoot"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/trend_data/single_indicator_for_child_areas": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get the trend data for single indicator",
                "operationId": "Data_GetTrendData_ChildAreas",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Profile group ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "Parent area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indicator_id",
                        "in": "query",
                        "description": "Indicator ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sex_id",
                        "in": "query",
                        "description": "Sex ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "age_id",
                        "in": "query",
                        "description": "Age ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year_range",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "category_type_id",
                        "in": "query",
                        "description": "Category type ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrendRoot"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrendRoot"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrendRoot"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/trend_data/specific_indicators_for_child_areas": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get the trend data for a list of indicator IDs",
                "operationId": "Data_GetTrendData_SpecificChildArea",
                "parameters": [
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "Parent area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indicator_ids",
                        "in": "query",
                        "description": "Comma separated list of indicator IDs",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrict_to_profile_ids",
                        "in": "query",
                        "description": "Comma separated list of profile IDs",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrendRoot"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrendRoot"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrendRoot"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/partition_data/by_category": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get all the most recently available category data",
                "description": "Used in the inequality tab of Fingertips",
                "operationId": "Data_GetMostRecentDataForAllCategories",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_code",
                        "in": "query",
                        "description": "Area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indicator_id",
                        "in": "query",
                        "description": "Indicator ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sex_id",
                        "in": "query",
                        "description": "Sex ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "age_id",
                        "in": "query",
                        "description": "Age ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year_range",
                        "in": "query",
                        "description": "Year range",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionDataForAllCategories"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionDataForAllCategories"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionDataForAllCategories"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/partition_data/by_age": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get all the most recently available data for all ages",
                "description": "Used in the inequality tab of Fingertips",
                "operationId": "Data_GetMostRecentDataForAllAges",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_code",
                        "in": "query",
                        "description": "Area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indicator_id",
                        "in": "query",
                        "description": "Indicator ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sex_id",
                        "in": "query",
                        "description": "Sex ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year_range",
                        "in": "query",
                        "description": "Year range",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "use_target",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionDataForAllAges"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionDataForAllAges"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionDataForAllAges"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/partition_data/by_sex": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get all the most recently available data for all sexes",
                "description": "Used in the inequality tab of Fingertips",
                "operationId": "Data_GetMostRecentDataForAllSexes",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_code",
                        "in": "query",
                        "description": "Area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indicator_id",
                        "in": "query",
                        "description": "Indicator ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "age_id",
                        "in": "query",
                        "description": "Age ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year_range",
                        "in": "query",
                        "description": "Year range",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "use_target",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionDataForAllSexes"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionDataForAllSexes"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionDataForAllSexes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/partition_trend_data/by_age": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get trend data partitioned by age",
                "operationId": "Data_TrendDataForInequalitiesByAge",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_code",
                        "in": "query",
                        "description": "Area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indicator_id",
                        "in": "query",
                        "description": "Indicator ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sex_id",
                        "in": "query",
                        "description": "Sex ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year_range",
                        "in": "query",
                        "description": "Year range",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionTrendData"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionTrendData"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionTrendData"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/partition_trend_data/by_sex": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get trend data partitioned by sex",
                "operationId": "Data_TrendDataForInequalitiesBySex",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_code",
                        "in": "query",
                        "description": "Area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indicator_id",
                        "in": "query",
                        "description": "Indicator ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "age_id",
                        "in": "query",
                        "description": "Age ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year_range",
                        "in": "query",
                        "description": "Year range",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionTrendData"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionTrendData"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionTrendData"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/partition_trend_data/by_category": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get trend data partitioned by category",
                "operationId": "Data_TrendDataForInequalitiesByCategory",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_code",
                        "in": "query",
                        "description": "Area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indicator_id",
                        "in": "query",
                        "description": "Indicator ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "age_id",
                        "in": "query",
                        "description": "Age ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sex_id",
                        "in": "query",
                        "description": "Sex ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "category_type_id",
                        "in": "query",
                        "description": "Category type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year_range",
                        "in": "query",
                        "description": "Year range",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionTrendData"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionTrendData"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionTrendData"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/partition_trend_data/by_categories": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get trend data partitioned by categories",
                "operationId": "Data_TrendDataForInequalitiesByCategories",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_code",
                        "in": "query",
                        "description": "Area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indicator_id",
                        "in": "query",
                        "description": "Indicator ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "age_id",
                        "in": "query",
                        "description": "Age ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sex_id",
                        "in": "query",
                        "description": "Sex ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year_range",
                        "in": "query",
                        "description": "Year range",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PartitionTrendData"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PartitionTrendData"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PartitionTrendData"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/grouproot_summaries/by_indicator_id": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get certain details of the specified indicators.",
                "description": "The indicators are differentiated by age and sex where appropriate. Returns a list of group root summaries.\r\nThese can optionally be limited to belonging to a specific profile.",
                "operationId": "Data_GetGroupDataForProfile",
                "parameters": [
                    {
                        "name": "indicator_ids",
                        "in": "query",
                        "description": "Comma separated list of indicator IDs [Maximum 100]",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area Type ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRootSummary"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRootSummary"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRootSummary"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/grouproot_summaries/by_profile_id": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get summaries of a specific list of indicators.",
                "description": "The indicators are differentiated by age and sex where appropriate. Returns a list of group root summaries.",
                "operationId": "Data_GetGroupDataForProfileByProfileID",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRootSummary"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRootSummary"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRootSummary"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/spc_for_dsr_limits": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get the confidence limits for a funnel plot",
                "operationId": "Data_GetSpcForDsrLimits",
                "parameters": [
                    {
                        "name": "comparator_value",
                        "in": "query",
                        "description": "Comparator value",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "population_min",
                        "in": "query",
                        "description": "Minimum population value",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "population_max",
                        "in": "query",
                        "description": "Maximum population value",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "unit_value",
                        "in": "query",
                        "description": "Unit value",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "year_range",
                        "in": "query",
                        "description": "Year range",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpcForDsrLimitsResponseObject"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpcForDsrLimitsResponseObject"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpcForDsrLimitsResponseObject"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/quinary_population": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get population data",
                "operationId": "Data_GetQuinaryPopulation",
                "parameters": [
                    {
                        "name": "area_code",
                        "in": "query",
                        "description": "Area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "data_point_offset",
                        "in": "query",
                        "description": "Time period offset from the data point (i.e. latest available time period) [Default is 0]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "properties": {}
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "properties": {}
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "properties": {}
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/quinary_population_summary": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Summary information for a GP practice",
                "operationId": "Data_GetQuinaryPopulationSummary",
                "parameters": [
                    {
                        "name": "area_code",
                        "in": "query",
                        "description": "Area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "data_point_offset",
                        "in": "query",
                        "description": "Time period offset from the data point (i.e. latest available time period) [Default is 0]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "properties": {}
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "properties": {}
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "properties": {}
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/value_limits": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get a list of minimum and maximum value limits for a group",
                "description": "Useful for setting limits on charts.",
                "operationId": "Data_GetValueLimits",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Group ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "Parent area code",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Limits"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Limits"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Limits"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/time_period": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get a formatted time period",
                "operationId": "Data_GetTimePeriod",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "quarter",
                        "in": "query",
                        "description": "Quarter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Month",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year_range",
                        "in": "query",
                        "description": "Year range",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year_type_id",
                        "in": "query",
                        "description": "Year type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "data_date",
                        "in": "query",
                        "description": "Data date [optional]",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/profile_group_roots": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get an ordered list of profile group roots for a profile",
                "description": "Group roots are returned without data. This service is used for find out the order of indicators within a group.",
                "operationId": "Data_GetGroupRoots",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Profile group ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRoot"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRoot"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupRoot"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_statistics/by_indicator_id": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get descriptive statistics (min, max, median, interquartile range) for the latest values for\r\na list of indicators",
                "operationId": "Data_GetIndicatorStatisticsByIndicatorId",
                "parameters": [
                    {
                        "name": "child_area_type_id",
                        "in": "query",
                        "description": "Child area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "Parent area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indicator_ids",
                        "in": "query",
                        "description": "Comma separated list of indicator IDs",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrict_to_profile_ids",
                        "in": "query",
                        "description": "Comma separated list of profile IDs",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "data_point_offset",
                        "in": "query",
                        "description": "Offset in years, quarters or months from the most recent time point [default is 0]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorStats"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorStats"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorStats"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_statistics/by_profile_id": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get descriptive statistics (min, max, median, interquartile range) for the latest values for\r\n all the indicators in a profile group",
                "operationId": "Data_GetIndicatorStatisticsByProfileId",
                "parameters": [
                    {
                        "name": "child_area_type_id",
                        "in": "query",
                        "description": "Child area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "Parent area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Profile group ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "data_point_offset",
                        "in": "query",
                        "description": "Offset in years, quarters or months from the most recent time point [default is 0]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorStats"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorStats"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorStats"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_statistics/trends_for_single_indicator": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Get descriptive statistics (min, max, median, interquartile range) for the values of\r\n a specific indicator for each available time period",
                "operationId": "Data_GetIndicatorStatisticsTrendsForIndicator",
                "parameters": [
                    {
                        "name": "indicator_id",
                        "in": "query",
                        "description": "Indicator ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sex_id",
                        "in": "query",
                        "description": "Sex ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "age_id",
                        "in": "query",
                        "description": "Age ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "child_area_type_id",
                        "in": "query",
                        "description": "Child area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "description": "Parent area code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year_range",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "category_type_id",
                        "in": "query",
                        "description": "Category type ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IndicatorStats"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IndicatorStats"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IndicatorStats"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/available_data": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Returns the available data for each combination of indicator ID and area type ID.",
                "description": "If only the indicator ID is specified then the results will be returned\r\n            for every area type for which data is available.",
                "operationId": "Data_GetAvailableDataForGrouping",
                "parameters": [
                    {
                        "name": "indicator_id",
                        "in": "query",
                        "description": "Filter by indicator ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Filter by area type ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupingData"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupingData"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupingData"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/data_changes": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Returns the most recent time that data was deleted and uploaded for an indicator",
                "description": "For confidentiality the LastUploadedBy and LastDeletedBy properties are only available for internal DHSC users",
                "operationId": "Data_GetDataChanges",
                "parameters": [
                    {
                        "name": "indicator_id",
                        "in": "query",
                        "description": "Indicator ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataChange"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataChange"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataChange"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/data_changes_and_updates/csv/by_indicator_ids": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Returns the date an indicator was last updated for the respective area type as a CSV file.",
                "operationId": "Data_GetFileForChangesAndPublishForAllAreasByIids",
                "parameters": [
                    {
                        "name": "indicator_ids",
                        "in": "query",
                        "description": "Indicator IDs",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/data_changes_and_updates/by_indicator_ids": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Returns the date an indicator was last updated for the respective area type",
                "operationId": "Data_GetDataChangesAndPublishForAllAreasByIids",
                "parameters": [
                    {
                        "name": "indicator_ids",
                        "in": "query",
                        "description": "Indicator IDs",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DataChangeAndPublishWithAreasDet"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DataChangeAndPublishWithAreasDet"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DataChangeAndPublishWithAreasDet"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/data_changes_by_ids": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Returns the most recent time that data was deleted and uploaded for an indicator",
                "description": "For confidentiality the LastUploadedBy and LastDeletedBy properties are only available for internal DHSC users",
                "operationId": "Data_GetDataChangesByIds",
                "parameters": [
                    {
                        "name": "indicator_ids",
                        "in": "query",
                        "description": "Indicator IDs",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DataChange"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DataChange"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DataChange"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/data_changes/all_indicators": {
            "get": {
                "tags": [
                    "Data"
                ],
                "summary": "Returns the most recent time that data was deleted and uploaded for all indicators",
                "description": "For confidentiality the LastUploadedBy and LastDeletedBy properties are only available for internal DHSC users",
                "operationId": "Data_GetAllDataChanges",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/DataChange"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/DataChange"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/DataChange"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_statistics": {
            "get": {
                "tags": [
                    "Data"
                ],
                "operationId": "Data_GetIndicatorStatistics",
                "parameters": [
                    {
                        "name": "child_area_type_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "parent_area_code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profile_id",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "group_id",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "indicator_ids",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrict_to_profile_ids",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "data_point_offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorStats"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorStats"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorStats"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/age": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get a specific age category.",
                "operationId": "Entities_GetAge",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Age ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Age"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Age"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Age"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ages": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get all defined age categories",
                "operationId": "Entities_GetAges",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Age"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Age"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Age"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cqcratings": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get all defined CQC rating categories",
                "operationId": "Entities_GetCQCRatings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CQCRating"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CQCRating"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CQCRating"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get the categories for a specific category type",
                "operationId": "Entities_GetCategories",
                "parameters": [
                    {
                        "name": "category_type_id",
                        "in": "query",
                        "description": "Category type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/category_type": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get a specific age category type.",
                "operationId": "Entities_GetCategoryType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Category type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryType"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryType"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryType"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/category_types": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get all category types",
                "operationId": "Entities_GetCategoryTypes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryType"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryType"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryType"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/comparator": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get a specific comparator/benchmark",
                "operationId": "Entities_GetComparator",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Comparator ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comparator"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comparator"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comparator"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/comparators": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get list of all comparators/benchmarks",
                "operationId": "Entities_GetComparators",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Comparator"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Comparator"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Comparator"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/comparator_method": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get a specific comparator/benchmarking method",
                "operationId": "Entities_GetComparatorMethod",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Comparator method ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ComparatorMethod"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ComparatorMethod"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ComparatorMethod"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/comparator_methods": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get all comparator methods",
                "operationId": "Entities_GetComparatorMethods",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ComparatorMethod"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ComparatorMethod"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ComparatorMethod"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/comparator_significances": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get the comparator significances for similarity calculations",
                "operationId": "Entities_GetComparatorSignificances",
                "parameters": [
                    {
                        "name": "polarity_id",
                        "in": "query",
                        "description": "Polarity ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ComparatorSignificance"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ComparatorSignificance"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ComparatorSignificance"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/confidence_interval_method": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get a specific confidence interval method",
                "operationId": "Entities_GetConfidenceIntervalMethod",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfidenceIntervalMethod"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfidenceIntervalMethod"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfidenceIntervalMethod"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/confidence_interval_methods": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get all confidence interval methods",
                "operationId": "Entities_GetConfidenceIntervalMethods",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ConfidenceIntervalMethod"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ConfidenceIntervalMethod"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ConfidenceIntervalMethod"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/data_quality_notes": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get a list of all data quality notes",
                "description": "Data quality notes are used to provide more information about concerns relating to specific indicators",
                "operationId": "Entities_GetDataQualityNotes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DataQualityNote"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DataQualityNote"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DataQualityNote"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/goals": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get a list of all goals",
                "description": "Goals are defined quality ranges for assigned to indicators",
                "operationId": "Entities_GetGoals",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TargetConfig"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TargetConfig"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TargetConfig"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/nearest_neighbour_type": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get a specific nearest neighbour type by nearest neighbour type ID",
                "operationId": "Entities_GetNearestNeighbourType",
                "parameters": [
                    {
                        "name": "neighbour_type_id",
                        "in": "query",
                        "description": "Nearest neighbour type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "include_system_content",
                        "in": "query",
                        "description": "Whether or not to include system content",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NearestNeighbourType"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NearestNeighbourType"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/NearestNeighbourType"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/nearest_neighbour_type_by_profile_id_and_area_type_id": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get a specific nearest neighbour type",
                "operationId": "Entities_GetNearestNeighbourTypeByProfileIDAndTypeID",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "profile id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "area type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "include_system_content",
                        "in": "query",
                        "description": "Whether or not to include system content",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NearestNeighbourType"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NearestNeighbourType"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NearestNeighbourType"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/nearest_neighbour_types": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get a list of all the nearest neighbour types",
                "operationId": "Entities_GetNearestNeighbourTypes",
                "parameters": [
                    {
                        "name": "include_system_content",
                        "in": "query",
                        "description": "Whether or not to include system content",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NearestNeighbourType"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NearestNeighbourType"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NearestNeighbourType"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/polarities": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get all indicator benchmarking significance polarities",
                "operationId": "Entities_GetPolarities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Polarity"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Polarity"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Polarity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/recent_trends": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get a list of the recent trends",
                "operationId": "Entities_GetTrendMarkers",
                "parameters": [
                    {
                        "name": "polarityId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrendMarkerLabel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrendMarkerLabel"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrendMarkerLabel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sexes": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get all defined sex categories",
                "operationId": "Entities_GetSexes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Sex"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Sex"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Sex"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/units": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get all units",
                "operationId": "Entities_GetUnits",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/value_notes": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get a list of all value notes",
                "description": "Value notes are used to provide more information about specific data points",
                "operationId": "Entities_GetValueNotes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ValueNote"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ValueNote"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ValueNote"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/value_types": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get all value types",
                "operationId": "Entities_GetValueTypes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ValueType"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ValueType"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ValueType"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/year_type": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get a specific year type",
                "operationId": "Entities_GetYearType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Year type ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/YearType"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/YearType"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/YearType"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/year_types": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get all year types",
                "operationId": "Entities_GetYearTypes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/YearType"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/YearType"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/YearType"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/all_ages": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "operationId": "Entities_GetAllAges",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Age"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Age"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Age"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/data_sources": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get all data sources",
                "operationId": "Entities_GetDataSources",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DataSource"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DataSource"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DataSource"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/numerator_denominator_sources": {
            "get": {
                "tags": [
                    "Entities"
                ],
                "summary": "Get all numerator and denominator sources",
                "operationId": "Entities_GetNumeratorDenominatorSources",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NumeratorDenominatorSource"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NumeratorDenominatorSource"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NumeratorDenominatorSource"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_metadata/all": {
            "get": {
                "tags": [
                    "IndicatorMetadata"
                ],
                "summary": "Get indicator metadata for all the indicators available",
                "operationId": "IndicatorMetadata_GetAllIndicatorMetadata",
                "parameters": [
                    {
                        "name": "include_definition",
                        "in": "query",
                        "description": "Whether to include the indicator definition and other text metadata [yes/no - no is default]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_system_content",
                        "in": "query",
                        "description": "Whether to include system content in response [yes/no - no is default]",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorMetadata"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorMetadata"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorMetadata"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_metadata/all/ids_only": {
            "get": {
                "tags": [
                    "IndicatorMetadata"
                ],
                "summary": "Get the IDs for all the indicators",
                "operationId": "IndicatorMetadata_GetAllIndicatorMetadataIds",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_metadata/indicator_owner": {
            "get": {
                "tags": [
                    "IndicatorMetadata"
                ],
                "summary": "Get the owner profile(s) for a list of indicator IDs",
                "operationId": "IndicatorMetadata_GetIndicatorMetadataOwnerDetails",
                "parameters": [
                    {
                        "name": "indicator_ids",
                        "in": "query",
                        "description": "Comma separated list of indicator IDs",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IndicatorMetadataOwnerDetails"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IndicatorMetadataOwnerDetails"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IndicatorMetadataOwnerDetails"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_metadata/by_indicator_id": {
            "get": {
                "tags": [
                    "IndicatorMetadata"
                ],
                "summary": "Get the indicator metadata for a list of indicator IDs",
                "operationId": "IndicatorMetadata_GetIndicatorMetadata",
                "parameters": [
                    {
                        "name": "indicator_ids",
                        "in": "query",
                        "description": "Comma separated list of indicator IDs",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrict_to_profile_ids",
                        "in": "query",
                        "description": "Comma separated list of profile IDs [optional]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_definition",
                        "in": "query",
                        "description": "Whether to include the definition and other text metadata [yes/no - no is default]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_system_content",
                        "in": "query",
                        "description": "Whether to include system content in response [yes/no - no is default]",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorMetadata"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorMetadata"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorMetadata"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_metadata/by_group_id": {
            "get": {
                "tags": [
                    "IndicatorMetadata"
                ],
                "summary": "Get indicator metadata for one or more profile groups",
                "operationId": "IndicatorMetadata_GetIndicatorMetadataByGroupID",
                "parameters": [
                    {
                        "name": "group_ids",
                        "in": "query",
                        "description": "Comma separated list of profile group IDs",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_definition",
                        "in": "query",
                        "description": "Whether to include the indicator definition and other text metadata [yes/no - no is default]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_system_content",
                        "in": "query",
                        "description": "Whether to include system content in response [yes/no - no is default]",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorMetadata"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorMetadata"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorMetadata"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_metadata/by_profile_id": {
            "get": {
                "tags": [
                    "IndicatorMetadata"
                ],
                "summary": "Get indicator metadata for a profile",
                "operationId": "IndicatorMetadata_GetIndicatorMetadataByProfileID",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "include_definition",
                        "in": "query",
                        "description": "Whether to include the indicator definition and other text metadata [yes/no - no is default]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_system_content",
                        "in": "query",
                        "description": "Whether to include system content in response [yes/no - no is default]",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorMetadata"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorMetadata"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/IndicatorMetadata"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_metadata/csv/all": {
            "get": {
                "tags": [
                    "IndicatorMetadata"
                ],
                "summary": "Get a CSV file of metadata for all the indicators available",
                "description": "This service returns data in CSV not JSON format so the response will not be viewable on this page",
                "operationId": "IndicatorMetadata_GetIndicatorMetadataFileForAllIndicators",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_metadata/csv/by_indicator_id": {
            "get": {
                "tags": [
                    "IndicatorMetadata"
                ],
                "summary": "Get a CSV file of metadata for the specified indicators",
                "description": "This service returns data in CSV not JSON format so the response will not be viewable on this page",
                "operationId": "IndicatorMetadata_GetIndicatorMetadataFileForIndicatorList",
                "parameters": [
                    {
                        "name": "indicator_ids",
                        "in": "query",
                        "description": "Comma-separated list of indicator IDs [Maximum 100]",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID [optional]",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_metadata/csv/by_group_id": {
            "get": {
                "tags": [
                    "IndicatorMetadata"
                ],
                "summary": "Gets a CSV file of metadata for all the indicators in the specified profile group",
                "description": "This service returns data in CSV not JSON format so the response will not be viewable on this page",
                "operationId": "IndicatorMetadata_GetIndicatorMetadataFileByProfileGroup",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Profile group ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_metadata/csv/by_profile_id": {
            "get": {
                "tags": [
                    "IndicatorMetadata"
                ],
                "summary": "Get a CSV file of metadata for all the indicators in the specified profile",
                "description": "This service returns data in CSV not JSON format so the response will not be viewable on this page",
                "operationId": "IndicatorMetadata_GetIndicatorMetadataFileByProfile",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/advanced_search_results": {
            "get": {
                "tags": [
                    "IndicatorMetadata"
                ],
                "summary": "Get the last updated date for all the indicators",
                "operationId": "IndicatorMetadata_GetAllAdvancedSearchResults",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AdvancedSearchResult"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AdvancedSearchResult"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AdvancedSearchResult"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_metadata_text_properties": {
            "get": {
                "tags": [
                    "IndicatorMetadata"
                ],
                "summary": "Get a list of the properties that are available for indicator metadata",
                "operationId": "IndicatorMetadata_GetIndicatorMetadataTextProperties",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IndicatorMetadataTextProperty"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IndicatorMetadataTextProperty"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IndicatorMetadataTextProperty"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_names/by_group_id": {
            "get": {
                "tags": [
                    "IndicatorMetadata"
                ],
                "summary": "Get a list of the indicators in the specified profile groups",
                "operationId": "IndicatorMetadata_GetIndicatorNamesByGroupId",
                "parameters": [
                    {
                        "name": "group_ids",
                        "in": "query",
                        "description": "Comma separated list of group ids",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DomainIndicatorName"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DomainIndicatorName"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DomainIndicatorName"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_search": {
            "get": {
                "tags": [
                    "IndicatorMetadata"
                ],
                "summary": "Finds indicators for each area type that match specific words",
                "description": "Words can be combined with AND / OR\r\n\r\nReturns a hash of area type IDs that each map to a list of IDs of indicators\r\nfor which the metadata matches the search text.",
                "operationId": "IndicatorMetadata_GetIndicatorsThatMatchTextByAreaTypeId",
                "parameters": [
                    {
                        "name": "search_text",
                        "in": "query",
                        "description": "Text to search indicator metadata with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrict_to_profile_ids",
                        "in": "query",
                        "description": "Comma separated list of profile IDs [optional]",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int32"
                                        }
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int32"
                                        }
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int32"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/indicator_search_list_indicators": {
            "get": {
                "tags": [
                    "IndicatorMetadata"
                ],
                "summary": "Finds indicators for each area type that match specific words",
                "description": "Words can be combined with AND / OR\r\n\r\nReturns a list of the indicators in the order of how well they match the search text.",
                "operationId": "IndicatorMetadata_GetIndicatorsThatMatchTextAsList",
                "parameters": [
                    {
                        "name": "search_text",
                        "in": "query",
                        "description": "Text to search indicator metadata with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/INamedEntity"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/INamedEntity"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/INamedEntity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/group_metadata": {
            "get": {
                "tags": [
                    "Profiles"
                ],
                "summary": "Get name and sequence of specific profile groups",
                "operationId": "Profiles_GetGroupingMetadatas",
                "parameters": [
                    {
                        "name": "group_ids",
                        "in": "query",
                        "description": "Comma-separated list of profile group IDs",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupingMetadata"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupingMetadata"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupingMetadata"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/group_subheadings": {
            "get": {
                "tags": [
                    "Profiles"
                ],
                "summary": "Get profile group subheadings for a specific area type and profile group",
                "operationId": "Profiles_GetGroupingSubheadings",
                "parameters": [
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "group_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupingSubheading"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupingSubheading"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupingSubheading"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/profile": {
            "get": {
                "tags": [
                    "Profiles"
                ],
                "summary": "Get a specific profile by its ID",
                "operationId": "Profiles_GetProfile",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "Profile ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/profile/by_key": {
            "get": {
                "tags": [
                    "Profiles"
                ],
                "summary": "Get a specific profile by its key",
                "operationId": "Profiles_GetProfileByKey",
                "parameters": [
                    {
                        "name": "profile_key",
                        "in": "query",
                        "description": "Profile key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/profiles_from_collection": {
            "get": {
                "tags": [
                    "Profiles"
                ],
                "summary": "Get all profiles from a collection by its profile_collection_id",
                "operationId": "Profiles_GetProfilesFromCollection",
                "parameters": [
                    {
                        "name": "profile_collection_id",
                        "in": "query",
                        "description": "Profile Collection Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Profile"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Profile"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Profile"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/profiles": {
            "get": {
                "tags": [
                    "Profiles"
                ],
                "summary": "Get all profiles",
                "operationId": "Profiles_GetProfiles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Profile"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Profile"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Profile"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/profiles_containing_indicators": {
            "get": {
                "tags": [
                    "Profiles"
                ],
                "summary": "For each indicator lists the profiles that it is included in",
                "description": "A dictionary of indicator ID to a list of profiles",
                "operationId": "Profiles_GetProfilesPerIndicator",
                "parameters": [
                    {
                        "name": "indicator_ids",
                        "in": "query",
                        "description": "List of indicator IDs [Maximum 100]",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "area_type_id",
                        "in": "query",
                        "description": "Area type ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/ProfilePerIndicator"
                                        }
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/ProfilePerIndicator"
                                        }
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/ProfilePerIndicator"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AreaList": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ListName": {
                        "type": "string"
                    },
                    "AreaTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "UserId": {
                        "type": "string"
                    },
                    "CreatedOn": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UpdatedOn": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "PublicId": {
                        "type": "string"
                    },
                    "AreaListAreaCodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AreaListAreaCode"
                        }
                    }
                }
            },
            "AreaListAreaCode": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "AreaListId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "AreaCode": {
                        "type": "string"
                    },
                    "AreaList": {
                        "$ref": "#/components/schemas/AreaList"
                    }
                }
            },
            "AreaType": {
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string"
                    },
                    "Short": {
                        "type": "string"
                    },
                    "Class": {
                        "type": "string"
                    },
                    "CanBeDisplayedOnMap": {
                        "type": "boolean"
                    },
                    "Sequence": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ParentAreaTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IAreaType"
                        }
                    },
                    "ComponentAreaTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AreaType"
                        }
                    }
                }
            },
            "IAreaType": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "Name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "ShortName": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "AreaAddress": {
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string"
                    },
                    "Short": {
                        "type": "string"
                    },
                    "AreaTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "A1": {
                        "type": "string"
                    },
                    "A2": {
                        "type": "string"
                    },
                    "A3": {
                        "type": "string"
                    },
                    "A4": {
                        "type": "string"
                    },
                    "Postcode": {
                        "type": "string"
                    },
                    "IsCurrent": {
                        "type": "boolean"
                    },
                    "Code": {
                        "type": "string"
                    },
                    "LatLng": {
                        "$ref": "#/components/schemas/LatitudeLongitude"
                    }
                }
            },
            "LatitudeLongitude": {
                "type": "object",
                "properties": {
                    "Lat": {
                        "type": "number",
                        "format": "double"
                    },
                    "Lng": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "IArea": {
                "type": "object",
                "properties": {
                    "Code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "Sequence": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "ShortName": {
                        "type": "string",
                        "readOnly": true
                    },
                    "AreaTypeId": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "IsAreaList": {
                        "type": "boolean",
                        "readOnly": true
                    }
                }
            },
            "NeighbourAreaDetails": {
                "type": "object",
                "properties": {
                    "AreaCode": {
                        "type": "string"
                    },
                    "AreaName": {
                        "type": "string"
                    },
                    "NeighbourAreaDet": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NeighbourAreaDet"
                        }
                    }
                }
            },
            "NeighbourAreaDet": {
                "type": "object",
                "properties": {
                    "NeighbourTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "NeighbourName": {
                        "type": "string"
                    },
                    "NeighbourAreas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NeighbourArea"
                        }
                    }
                }
            },
            "NeighbourArea": {
                "type": "object",
                "properties": {
                    "AreaCode": {
                        "type": "string"
                    },
                    "AreaName": {
                        "type": "string"
                    },
                    "Position": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "AreaToParentsMap": {
                "type": "object",
                "properties": {
                    "Code": {
                        "type": "string"
                    },
                    "AreaTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Parents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AreaToParentsMap"
                        }
                    }
                }
            },
            "NearByAreas": {
                "type": "object",
                "properties": {
                    "Code": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "A1": {
                        "type": "string"
                    },
                    "A2": {
                        "type": "string"
                    },
                    "A3": {
                        "type": "string"
                    },
                    "A4": {
                        "type": "string"
                    },
                    "Postcode": {
                        "type": "string"
                    },
                    "AreaTypeID": {
                        "type": "string"
                    },
                    "Distance": {
                        "type": "number",
                        "format": "double"
                    },
                    "DistanceValF": {
                        "type": "string"
                    },
                    "Easting": {
                        "type": "number",
                        "format": "double"
                    },
                    "Northing": {
                        "type": "number",
                        "format": "double"
                    },
                    "LatLng": {
                        "$ref": "#/components/schemas/LatitudeLongitude"
                    }
                }
            },
            "GeographicalSearchResult": {
                "type": "object",
                "properties": {
                    "PlaceName": {
                        "type": "string"
                    },
                    "PolygonAreaCode": {
                        "type": "string"
                    },
                    "PolygonAreaName": {
                        "type": "string"
                    },
                    "Easting": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Northing": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "SearchResultArea": {
                "type": "object",
                "properties": {
                    "Code": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Short": {
                        "type": "string"
                    },
                    "AreaTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ParentArea": {
                        "$ref": "#/components/schemas/Area"
                    },
                    "IsComponentOf": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "Area": {
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string"
                    },
                    "Short": {
                        "type": "string"
                    },
                    "AreaTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Sequence": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Code": {
                        "type": "string"
                    }
                }
            },
            "GroupRoot": {
                "type": "object",
                "properties": {
                    "Grouping": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Grouping"
                        }
                    },
                    "Data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CoreDataSet"
                        }
                    },
                    "Sequence": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "DateChanges": {
                        "$ref": "#/components/schemas/IndicatorDateChange"
                    },
                    "GroupId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "IID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Category": {
                        "$ref": "#/components/schemas/Category"
                    },
                    "StateSex": {
                        "type": "boolean"
                    },
                    "Sex": {
                        "$ref": "#/components/schemas/Sex"
                    },
                    "Age": {
                        "$ref": "#/components/schemas/Age"
                    },
                    "StateAge": {
                        "type": "boolean"
                    },
                    "StateYearRange": {
                        "type": "boolean"
                    },
                    "YearRange": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "PolarityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ComparatorMethodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "RecentTrends": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TrendMarkerResult"
                        }
                    }
                }
            },
            "Grouping": {
                "type": "object",
                "properties": {
                    "GroupingId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "GroupId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "SexId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "AgeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "CategoryTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "CategoryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "AreaTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ComparatorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "IndicatorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "PolarityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ComparatorMethodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "SigLevel": {
                        "type": "number",
                        "format": "double"
                    },
                    "ComparatorTargetId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Sequence": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "BaselineYear": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "BaselineQuarter": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "BaselineMonth": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "BaselineDataDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "DataPointYear": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "DataPointQuarter": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "DataPointMonth": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "DataPointDataDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "YearRange": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Period": {
                        "type": "string"
                    },
                    "ComparatorData": {
                        "$ref": "#/components/schemas/CoreDataSet"
                    }
                }
            },
            "CoreDataSet": {
                "type": "object",
                "properties": {
                    "AgeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "SexId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "IndicatorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "AreaCode": {
                        "type": "string"
                    },
                    "Denom": {
                        "type": "number",
                        "format": "double"
                    },
                    "Denom2": {
                        "type": "number",
                        "format": "double"
                    },
                    "Year": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "YearRange": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Quarter": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Month": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Sig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "Significance": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "NoteId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "CategoryTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "CategoryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "DataDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "LoCI": {
                        "type": "number",
                        "format": "double"
                    },
                    "UpCI": {
                        "type": "number",
                        "format": "double"
                    },
                    "LoCIF": {
                        "type": "string"
                    },
                    "UpCIF": {
                        "type": "string"
                    },
                    "LoCI99_8": {
                        "type": "number",
                        "format": "double"
                    },
                    "UpCI99_8": {
                        "type": "number",
                        "format": "double"
                    },
                    "LoCI99_8F": {
                        "type": "string"
                    },
                    "UpCI99_8F": {
                        "type": "string"
                    },
                    "Val": {
                        "type": "number",
                        "format": "double"
                    },
                    "ValF": {
                        "type": "string"
                    },
                    "Count": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "IndicatorDateChange": {
                "type": "object",
                "properties": {
                    "HasDataChangedRecently": {
                        "type": "boolean"
                    },
                    "DateOfLastChange": {
                        "type": "string"
                    }
                }
            },
            "Category": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "CategoryTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "ShortName": {
                        "type": "string"
                    },
                    "Sequence": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Sex": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string"
                    }
                }
            },
            "Age": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Sequence": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "TrendMarkerResult": {
                "type": "object",
                "properties": {
                    "Marker": {
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2,
                            3
                        ]
                    },
                    "MarkerForMostRecentValueComparedWithPreviousValue": {
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2,
                            3
                        ]
                    },
                    "PointsUsed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Message": {
                        "type": "string"
                    }
                }
            },
            "SimpleAreaData": {
                "type": "object",
                "properties": {
                    "IID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Sig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "Data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValueData"
                        }
                    }
                }
            },
            "ValueData": {
                "type": "object",
                "properties": {
                    "Val": {
                        "type": "number",
                        "format": "double"
                    },
                    "Count": {
                        "type": "number",
                        "format": "double"
                    },
                    "ValF": {
                        "type": "string"
                    }
                }
            },
            "TrendRoot": {
                "type": "object",
                "properties": {
                    "Limits": {
                        "$ref": "#/components/schemas/Limits"
                    },
                    "Data": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/TrendDataPoint"
                            }
                        }
                    },
                    "ComparatorValueFs": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "ComparatorValue": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "number",
                                "format": "double"
                            }
                        }
                    },
                    "ComparatorData": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/components/schemas/CoreDataSet"
                            }
                        }
                    },
                    "Periods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "GroupId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "IID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Category": {
                        "$ref": "#/components/schemas/Category"
                    },
                    "StateSex": {
                        "type": "boolean"
                    },
                    "Sex": {
                        "$ref": "#/components/schemas/Sex"
                    },
                    "Age": {
                        "$ref": "#/components/schemas/Age"
                    },
                    "StateAge": {
                        "type": "boolean"
                    },
                    "StateYearRange": {
                        "type": "boolean"
                    },
                    "YearRange": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "PolarityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ComparatorMethodId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "RecentTrends": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TrendMarkerResult"
                        }
                    }
                }
            },
            "Limits": {
                "type": "object",
                "properties": {
                    "Min": {
                        "type": "number",
                        "format": "double"
                    },
                    "Max": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "TrendDataPoint": {
                "type": "object",
                "properties": {
                    "V": {
                        "type": "string"
                    },
                    "D": {
                        "type": "number",
                        "format": "double"
                    },
                    "Denom": {
                        "type": "number",
                        "format": "double"
                    },
                    "L": {
                        "type": "number",
                        "format": "double"
                    },
                    "LF": {
                        "type": "string"
                    },
                    "U": {
                        "type": "number",
                        "format": "double"
                    },
                    "UF": {
                        "type": "string"
                    },
                    "L99_8": {
                        "type": "number",
                        "format": "double"
                    },
                    "LF99_8": {
                        "type": "string"
                    },
                    "U99_8": {
                        "type": "number",
                        "format": "double"
                    },
                    "UF99_8": {
                        "type": "string"
                    },
                    "Sig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer",
                            "format": "int32",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5
                            ]
                        }
                    },
                    "NoteId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "C": {
                        "type": "number",
                        "format": "double"
                    },
                    "IsC": {
                        "type": "boolean"
                    },
                    "CategoryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "CategoryTypeId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "PartitionDataForAllCategories": {
                "type": "object",
                "properties": {
                    "SexId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "AgeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "CategoryTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoryType"
                        }
                    },
                    "BenchmarkDataSpecialCases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CoreDataSet"
                        }
                    },
                    "AreaCode": {
                        "type": "string"
                    },
                    "IndicatorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CoreDataSet"
                        }
                    }
                }
            },
            "CategoryType": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Short": {
                        "type": "string"
                    },
                    "UniqueName": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "Notes": {
                        "type": "string"
                    },
                    "Sequence": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Categories": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/Category"
                        }
                    }
                }
            },
            "PartitionDataForAllAges": {
                "type": "object",
                "properties": {
                    "SexId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Ages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Age"
                        }
                    },
                    "ChartAverageLineAgeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "AreaCode": {
                        "type": "string"
                    },
                    "IndicatorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CoreDataSet"
                        }
                    }
                }
            },
            "PartitionDataForAllSexes": {
                "type": "object",
                "properties": {
                    "AgeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Sexes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Sex"
                        }
                    },
                    "AreaCode": {
                        "type": "string"
                    },
                    "IndicatorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CoreDataSet"
                        }
                    }
                }
            },
            "PartitionTrendData": {
                "type": "object",
                "properties": {
                    "Labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/INamedEntity"
                        }
                    },
                    "TrendData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/CoreDataSet"
                            }
                        }
                    },
                    "Periods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "Limits": {
                        "$ref": "#/components/schemas/Limits"
                    },
                    "AreaAverage": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CoreDataSet"
                        }
                    }
                }
            },
            "INamedEntity": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string"
                    }
                }
            },
            "GroupRootSummary": {
                "type": "object",
                "properties": {
                    "IndicatorName": {
                        "type": "string"
                    },
                    "IID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Sex": {
                        "$ref": "#/components/schemas/Sex"
                    },
                    "Age": {
                        "$ref": "#/components/schemas/Age"
                    },
                    "Category": {
                        "$ref": "#/components/schemas/Category"
                    },
                    "DateChanges": {
                        "$ref": "#/components/schemas/IndicatorDateChange"
                    },
                    "DataQualityNote": {
                        "$ref": "#/components/schemas/DataQualityNote"
                    },
                    "GroupId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "StateSex": {
                        "type": "boolean"
                    },
                    "StateAge": {
                        "type": "boolean"
                    },
                    "StateYearRange": {
                        "type": "boolean"
                    },
                    "TimePeriod": {
                        "type": "string"
                    },
                    "Unit": {
                        "$ref": "#/components/schemas/Unit"
                    },
                    "ValueType": {
                        "$ref": "#/components/schemas/ValueType"
                    },
                    "YearRange": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "DataQualityNote": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Text": {
                        "type": "string"
                    },
                    "Comment": {
                        "type": "string"
                    }
                }
            },
            "Unit": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Value": {
                        "type": "number",
                        "format": "double"
                    },
                    "Label": {
                        "type": "string"
                    },
                    "ShowLeft": {
                        "type": "boolean"
                    }
                }
            },
            "ValueType": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string"
                    }
                }
            },
            "SpcForDsrLimitsResponseObject": {
                "type": "object",
                "properties": {
                    "ComparatorValue": {
                        "type": "number",
                        "format": "double"
                    },
                    "Points": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ControlLimits"
                        }
                    }
                }
            },
            "ControlLimits": {
                "type": "object",
                "properties": {
                    "x": {
                        "type": "number",
                        "format": "double"
                    },
                    "L2": {
                        "type": "number",
                        "format": "double"
                    },
                    "L3": {
                        "type": "number",
                        "format": "double"
                    },
                    "U2": {
                        "type": "number",
                        "format": "double"
                    },
                    "U3": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "IndicatorStats": {
                "type": "object",
                "properties": {
                    "IID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Sex": {
                        "$ref": "#/components/schemas/Sex"
                    },
                    "Age": {
                        "$ref": "#/components/schemas/Age"
                    },
                    "Category": {
                        "$ref": "#/components/schemas/Category"
                    },
                    "YearRange": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Stats": {
                        "$ref": "#/components/schemas/IndicatorStatsPercentiles"
                    },
                    "StatsF": {
                        "$ref": "#/components/schemas/IndicatorStatsPercentilesFormatted"
                    },
                    "HaveRequiredValues": {
                        "type": "boolean"
                    },
                    "Period": {
                        "type": "string"
                    },
                    "Limits": {
                        "$ref": "#/components/schemas/Limits"
                    }
                }
            },
            "IndicatorStatsPercentiles": {
                "type": "object",
                "properties": {
                    "P5": {
                        "type": "number",
                        "format": "double"
                    },
                    "P25": {
                        "type": "number",
                        "format": "double"
                    },
                    "Median": {
                        "type": "number",
                        "format": "double"
                    },
                    "P75": {
                        "type": "number",
                        "format": "double"
                    },
                    "P95": {
                        "type": "number",
                        "format": "double"
                    },
                    "Min": {
                        "type": "number",
                        "format": "double"
                    },
                    "Max": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "IndicatorStatsPercentilesFormatted": {
                "type": "object",
                "properties": {
                    "Min": {
                        "type": "string"
                    },
                    "Max": {
                        "type": "string"
                    },
                    "P5": {
                        "type": "string"
                    },
                    "P25": {
                        "type": "string"
                    },
                    "Median": {
                        "type": "string"
                    },
                    "P75": {
                        "type": "string"
                    },
                    "P95": {
                        "type": "string"
                    }
                }
            },
            "GroupingData": {
                "type": "object",
                "properties": {
                    "IndicatorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "AreaTypeId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "DataChange": {
                "type": "object",
                "properties": {
                    "LastUploadedBy": {
                        "type": "string"
                    },
                    "LastUploadedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "LastDeletedBy": {
                        "type": "string"
                    },
                    "LastDeletedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "DataChangeAndPublishWithAreasDet": {
                "type": "object",
                "properties": {
                    "IndicatorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "IndicatorName": {
                        "type": "string"
                    },
                    "DataChange": {
                        "$ref": "#/components/schemas/DataChange"
                    },
                    "DataUpdatesByAreaType": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DataChangeAndPublishWithAreas"
                        }
                    }
                }
            },
            "DataChangeAndPublishWithAreas": {
                "type": "object",
                "properties": {
                    "AreaTypeName": {
                        "type": "string"
                    },
                    "PublishedDate": {
                        "type": "string"
                    }
                }
            },
            "CQCRating": {
                "type": "object",
                "properties": {
                    "RatingID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "OverallRating": {
                        "type": "string"
                    },
                    "OverallRatingColor": {
                        "type": "string"
                    }
                }
            },
            "Comparator": {
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string"
                    },
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ComparatorMethod": {
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string"
                    },
                    "ShortName": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "Reference": {
                        "type": "string"
                    },
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ComparatorSignificance": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5
                        ]
                    },
                    "Name": {
                        "type": "string"
                    }
                }
            },
            "ConfidenceIntervalMethod": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    }
                }
            },
            "TargetConfig": {
                "type": "object",
                "properties": {
                    "LowerLimit": {
                        "type": "number",
                        "format": "double"
                    },
                    "UpperLimit": {
                        "type": "number",
                        "format": "double"
                    },
                    "BespokeKey": {
                        "type": "string"
                    },
                    "PolarityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "LegendHtml": {
                        "type": "string"
                    },
                    "UseCIsForLimitComparison": {
                        "type": "boolean"
                    }
                }
            },
            "NearestNeighbourType": {
                "type": "object",
                "properties": {
                    "NeighbourTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "LinkText": {
                        "type": "string"
                    },
                    "SelectedText": {
                        "type": "string"
                    },
                    "ExtraLink": {
                        "type": "string"
                    },
                    "ApplicableAreaTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AreaType"
                        }
                    }
                }
            },
            "Polarity": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string"
                    }
                }
            },
            "TrendMarkerLabel": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1,
                            2,
                            3
                        ]
                    },
                    "Text": {
                        "type": "string"
                    }
                }
            },
            "ValueNote": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Text": {
                        "type": "string"
                    }
                }
            },
            "YearType": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string"
                    }
                }
            },
            "DataSource": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Description": {
                        "type": "string"
                    }
                }
            },
            "NumeratorDenominatorSource": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "Source": {
                        "type": "string"
                    }
                }
            },
            "IndicatorList": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ListName": {
                        "type": "string"
                    },
                    "UserId": {
                        "type": "string"
                    },
                    "CreatedOn": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UpdatedOn": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "PublicId": {
                        "type": "string"
                    },
                    "IndicatorListItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IndicatorListItem"
                        }
                    }
                }
            },
            "IndicatorListItem": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ListId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "IndicatorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "SexId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "AgeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Sequence": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "CategoryTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "CategoryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "YearRange": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "IndicatorList": {
                        "$ref": "#/components/schemas/IndicatorList"
                    }
                }
            },
            "IndicatorMetadata": {
                "type": "object",
                "properties": {
                    "LatestChangeTimestampOverride": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "SpecialCases": {
                        "type": "string"
                    },
                    "AlwaysShowSexWithIndicatorName": {
                        "type": "boolean"
                    },
                    "AlwaysShowAgeWithIndicatorName": {
                        "type": "boolean"
                    },
                    "AlwaysShowYearRangeWithIndicatorName": {
                        "type": "boolean"
                    },
                    "ShouldCountBeDisplayed": {
                        "type": "boolean"
                    },
                    "DataQualityNote": {
                        "$ref": "#/components/schemas/DataQualityNote"
                    },
                    "Unit": {
                        "$ref": "#/components/schemas/Unit"
                    },
                    "YearType": {
                        "$ref": "#/components/schemas/YearType"
                    },
                    "ValueType": {
                        "$ref": "#/components/schemas/ValueType"
                    },
                    "ConfidenceIntervalMethod": {
                        "$ref": "#/components/schemas/ConfidenceIntervalMethod"
                    },
                    "Target": {
                        "$ref": "#/components/schemas/TargetConfig"
                    },
                    "IID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Descriptive": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "DataChange": {
                        "$ref": "#/components/schemas/DataChange"
                    },
                    "InequalitiesExcludedCategoryTypeIds": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "IndicatorMetadataOwnerDetails": {
                "type": "object",
                "properties": {
                    "IndicatorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "IndicatorName": {
                        "type": "string"
                    },
                    "OwnerProfileId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "OwnerProfileName": {
                        "type": "string"
                    },
                    "OwnerProfileUrlKey": {
                        "type": "string"
                    }
                }
            },
            "AdvancedSearchResult": {
                "type": "object",
                "properties": {
                    "IndicatorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "IndicatorName": {
                        "type": "string"
                    },
                    "LastUpdatedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "LastUpdatedDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ProfileId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ProfileUrlKey": {
                        "type": "string"
                    },
                    "ProfileName": {
                        "type": "string"
                    },
                    "TopSeqGroupId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "AgeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "SexId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "RefNum": {
                        "type": "string"
                    }
                }
            },
            "IndicatorMetadataTextProperty": {
                "type": "object",
                "properties": {
                    "ColumnName": {
                        "type": "string"
                    },
                    "DisplayName": {
                        "type": "string"
                    },
                    "Order": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "DomainIndicatorName": {
                "type": "object",
                "properties": {
                    "GroupId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "IndicatorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "IndicatorName": {
                        "type": "string"
                    }
                }
            },
            "DeploymentStatus": {
                "type": "object",
                "properties": {
                    "WebSite": {
                        "type": "string"
                    },
                    "DataFiles": {
                        "type": "string"
                    },
                    "Database": {
                        "type": "string"
                    },
                    "BuildVersion": {
                        "type": "string"
                    },
                    "DatabaseBackUpTimestamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "GroupingMetadata": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Sequence": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ProfileId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "DataAvailable": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                }
            },
            "GroupingSubheading": {
                "type": "object",
                "properties": {
                    "SubheadingId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "GroupId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "AreaTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Subheading": {
                        "type": "string"
                    },
                    "Sequence": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Profile": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Key": {
                        "type": "string"
                    },
                    "GroupIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "GroupMetadata": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupingMetadata"
                        }
                    },
                    "Visualisations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "HasRecentTrends": {
                        "type": "boolean"
                    },
                    "StartValueAxisFromZero": {
                        "type": "boolean"
                    },
                    "IsChangeFromPreviousPeriodShown": {
                        "type": "boolean"
                    },
                    "DefaultAreaTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "DefaultTabId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "IgnoredSpineChartAreas": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "OpenInequalitiesOnAreaData": {
                        "type": "boolean"
                    },
                    "HasAnyData": {
                        "type": "boolean"
                    },
                    "HasOwnFrontPage": {
                        "type": "boolean"
                    }
                }
            },
            "ProfilePerIndicator": {
                "type": "object",
                "properties": {
                    "ProfileName": {
                        "type": "string"
                    },
                    "Url": {
                        "type": "string"
                    }
                }
            },
            "Report": {
                "type": "object",
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "SsrsFilename": {
                        "type": "string"
                    },
                    "SsrsParameters": {
                        "type": "string"
                    },
                    "Notes": {
                        "type": "string"
                    },
                    "IsLive": {
                        "type": "boolean"
                    },
                    "AreaTypeIds": {
                        "type": "string"
                    },
                    "ReportType": {
                        "type": "string"
                    },
                    "ExtraOptions": {
                        "type": "string"
                    },
                    "ExtraOptionsLabel": {
                        "type": "string"
                    },
                    "PreviewImageFileName": {
                        "type": "string"
                    },
                    "StaticReportsFolder": {
                        "type": "string"
                    },
                    "ShouldSsrsReportBeCached": {
                        "type": "boolean"
                    }
                }
            },
            "IndicatorMetadataTextValue": {
                "type": "object",
                "properties": {
                    "IndicatorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ProfileId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Definition": {
                        "type": "string"
                    },
                    "Rationale": {
                        "type": "string"
                    },
                    "DataSource": {
                        "type": "string"
                    },
                    "Producer": {
                        "type": "string"
                    },
                    "IndSourceLink": {
                        "type": "string"
                    },
                    "IndMethod": {
                        "type": "string"
                    },
                    "StandardPop": {
                        "type": "string"
                    },
                    "CIMethod": {
                        "type": "string"
                    },
                    "CountSource": {
                        "type": "string"
                    },
                    "CountDefinition": {
                        "type": "string"
                    },
                    "DenomSource": {
                        "type": "string"
                    },
                    "DenomDefinition": {
                        "type": "string"
                    },
                    "DiscControl": {
                        "type": "string"
                    },
                    "Caveats": {
                        "type": "string"
                    },
                    "Copyright": {
                        "type": "string"
                    },
                    "Reuse": {
                        "type": "string"
                    },
                    "Links": {
                        "type": "string"
                    },
                    "RefNum": {
                        "type": "string"
                    },
                    "Notes": {
                        "type": "string"
                    },
                    "Frequency": {
                        "type": "string"
                    },
                    "Rounding": {
                        "type": "string"
                    },
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "IndicatorContent": {
                        "type": "string"
                    },
                    "SpecificRationale": {
                        "type": "string"
                    },
                    "Keywords": {
                        "type": "string"
                    },
                    "EvidOfVariability": {
                        "type": "string"
                    },
                    "JustifConfIntMeth": {
                        "type": "string"
                    },
                    "QualityAssurance": {
                        "type": "string"
                    },
                    "QualityImprPlan": {
                        "type": "string"
                    },
                    "JustiOfExclusions": {
                        "type": "string"
                    },
                    "JustifOfDataSources": {
                        "type": "string"
                    },
                    "SponsorStakeholders": {
                        "type": "string"
                    },
                    "IndOwnerContDet": {
                        "type": "string"
                    },
                    "Comments": {
                        "type": "string"
                    },
                    "ImpactCovid19": {
                        "type": "string"
                    },
                    "SimpleName": {
                        "type": "string"
                    },
                    "SimpleDefinition": {
                        "type": "string"
                    },
                    "DataSourceId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "CountSourceId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "DenomSourceId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "UserFeedback": {
                "type": "object",
                "properties": {
                    "Url": {
                        "type": "string"
                    },
                    "WhatUserWasDoing": {
                        "type": "string"
                    },
                    "WhatWentWrong": {
                        "type": "string"
                    },
                    "Email": {
                        "type": "string"
                    },
                    "Environment": {
                        "type": "string"
                    },
                    "Timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "HasBeenDealtWith": {
                        "type": "boolean"
                    },
                    "WhichDeviceOrBrowserUsed": {
                        "type": "string"
                    },
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "WFSearchResult": {
                "type": "object",
                "properties": {
                    "PostCode": {
                        "type": "string"
                    },
                    "ZoneId": {
                        "type": "string"
                    },
                    "ZoneName": {
                        "type": "string"
                    },
                    "FluorideDose": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "x-original-swagger-version": "2.0"
}